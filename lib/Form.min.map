{"version":3,"file":"Form.min.js","mappings":"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","sources":["webpack://formla/webpack/universalModuleDefinition","webpack://formla/./node_modules/extract-files/lib/ReactNativeFile.js","webpack://formla/./node_modules/extract-files/lib/extractFiles.js","webpack://formla/./node_modules/extract-files/lib/index.js","webpack://formla/webpack/bootstrap","webpack://formla/webpack/runtime/define property getters","webpack://formla/webpack/runtime/hasOwnProperty shorthand","webpack://formla/webpack/runtime/make namespace object","webpack://formla/./src/utils.js","webpack://formla/./src/Errors.js","webpack://formla/./src/Form.js","webpack://formla/./src/http.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"formla\"] = factory();\n\telse\n\t\troot[\"formla\"] = factory();\n})(self, function() {\nreturn ","'use strict'\n\nexports.__esModule = true\nexports.ReactNativeFile = void 0\n\nvar ReactNativeFile = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type\n  this.uri = uri\n  this.name = name\n  this.type = type\n}\n\nexports.ReactNativeFile = ReactNativeFile\n","'use strict'\n\nexports.__esModule = true\nexports.extractFiles = extractFiles\n\nvar _ReactNativeFile = require('./ReactNativeFile')\n\nfunction extractFiles(value, path) {\n  if (path === void 0) {\n    path = ''\n  }\n\n  var clone\n  var files = new Map()\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file)\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths)\n    else files.set(file, paths)\n  }\n\n  if (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof _ReactNativeFile.ReactNativeFile\n  ) {\n    clone = null\n    addFile([path], value)\n  } else {\n    var prefix = path ? path + '.' : ''\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function(file, i) {\n        addFile(['' + prefix + i], file)\n        return null\n      })\n    else if (Array.isArray(value))\n      clone = value.map(function(child, i) {\n        var result = extractFiles(child, '' + prefix + i)\n        result.files.forEach(addFile)\n        return result.clone\n      })\n    else if (value && value.constructor === Object) {\n      clone = {}\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i)\n        result.files.forEach(addFile)\n        clone[i] = result.clone\n      }\n    } else clone = value\n  }\n\n  return {\n    clone: clone,\n    files: files\n  }\n}\n","'use strict'\n\nexports.__esModule = true\nexports.ReactNativeFile = exports.extractFiles = void 0\n\nvar _extractFiles = require('./extractFiles')\n\nexports.extractFiles = _extractFiles.extractFiles\n\nvar _ReactNativeFile = require('./ReactNativeFile')\n\nexports.ReactNativeFile = _ReactNativeFile.ReactNativeFile\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// @flow\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function hasOwn (obj: Object, key: string): boolean %checks {\n    return hasOwnProperty.call(obj, key)\n}\n\nexport function isFile(val: mixed): boolean %checks {\n    return !!val && (val instanceof Blob);\n}\n\nexport function clone(obj: any): any {\n    if (isArr(obj)) {\n        return obj.map(clone);\n    }\n    if (obj === null || obj === undefined) {\n        return null;\n    }\n    if (isFile(obj) || ['number', 'string', 'boolean'].includes(typeof obj)) {\n        return obj;\n    }\n    if (isObj(obj)) {\n        let target = {};\n\n        Object.keys(obj).forEach((key) => target[key] = clone(obj[key]));\n\n        return target;\n    }\n}\n\nexport function emptyValue(original: mixed): Array<any> | {} | '' | null {\n    if (original instanceof Array) {\n        return [];\n    }\n    if (typeof original === 'object') {\n        return {};\n    }\n    if (typeof original === 'string') {\n        return '';\n    }\n    return null;\n}\n\nexport function isObj(value: mixed): boolean %checks {\n    return value !== null && typeof value === 'object';\n}\n\nexport function isArr(value: mixed): %checks {\n    return value instanceof Array;\n}\n\nexport function isNil(value: mixed): %checks {\n    return value == null;\n}\n\nexport function isFunc(value: mixed): %checks {\n    return value instanceof Function;\n}\n\nexport function isStr(value: mixed): %checks {\n    return typeof value === 'string';\n}\n\nexport function escapeRegExp(string: string) {\n    return string.replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&');\n}\n\nexport function containsFile(obj: any): boolean {\n    if (isArr(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            if (obj[i] instanceof File) {\n                return true;\n            }\n            if (isObj(obj[i])) {\n                return containsFile(obj[i]);\n            }\n        }\n    } else {\n        for (let key in obj) {\n            if (obj[key] instanceof File) {\n                return true;\n            }\n            if (isObj(obj[key])) {\n                return containsFile(obj[key]);\n            }\n        }\n    }\n    return false;\n}\n\nexport function arrayToObject(array: any[]): { [string]: any } {\n    let target = {};\n\n    array.forEach((item, index) => {\n        target[index] = item;\n    });\n\n    return target;\n}\n","// @flow\nimport {escapeRegExp, isArr, isNil} from \"./utils\";\n\ntype ErrorValue = string | Array<string>;\nexport type ErrorValues = { [string]: ErrorValue };\n\nclass Errors {\n\n    errors: ErrorValues;\n    elements: Array<{ key: string | RegExp, el: Element }>;\n\n    /**\n     * Create a new Errors instance.\n     */\n    constructor() {\n        this.errors = {};\n        this.elements = [];\n    }\n\n    /**\n     * Determine if an errors exists for the given field.\n     *\n     * @param {string|RegExp} field\n     */\n    has(field: string | RegExp): boolean {\n        if (field instanceof RegExp) {\n            return Object.keys(this.errors).some(key => field.test(key));\n        }\n        return this.errors.hasOwnProperty(field);\n    }\n\n    /**\n     * Determine if we have any errors.\n     */\n    any(): boolean {\n        return Object.keys(this.errors).length > 0;\n    }\n\n    /**\n     * Retrieve the error message for a field.\n     *\n     * @param {string} field\n     */\n    getFirst(field: string): ?string {\n        let error = this.get(field);\n        if (error) {\n            if (isArr(error)) {\n                return error.length ? error[0] : null;\n            } else {\n                return error || null;\n            }\n        }\n    }\n\n    get(field: string) {\n        return this.errors[field];\n    }\n\n    /**\n     * Add a new error message if one doesn't already exist.\n     *\n     * @param {string} field\n     * @param error\n     * @param force\n     */\n    add(field: string, error: ErrorValue, force: boolean = false) {\n        if (!this.has(field) || force) {\n            this.errors[field] = error;\n        }\n    }\n\n    /**\n     * Record the new errors.\n     *\n     * @param {object} errors\n     * @param timeout\n     */\n    record(errors: ErrorValues, timeout: ?(false | number) = 3000) {\n        this.errors = errors;\n        if (timeout) {\n            window.setTimeout(() => {\n                this.clear();\n            }, timeout);\n        }\n    }\n\n    /**\n     * Clear one or all error fields.\n     *\n     * @param {string|null} field\n     */\n    clear(field: ?string) {\n        if (field) {\n            delete this.errors[field];\n\n            return;\n        }\n\n        this.errors = {};\n    }\n\n    addElement(key: string | RegExp | string[], el: Element) {\n        if (isArr(key)) {\n            key.forEach(field => this.addElement(field, el));\n        } else {\n            this.elements.push({ key, el });\n        }\n    }\n\n    removeElement(element: Element) {\n        this.elements = this.elements.filter(({ el }) => el !== element);\n    }\n\n    removeElementKey(field: string | RegExp | string[]) {\n        if (isArr(field)) {\n            field.forEach(key => this.removeElementKey(key));\n        } else {\n            this.elements = this.elements.filter(({ key }) => key !== field);\n        }\n    }\n\n    hasElements(): boolean {\n        return !!this.elements.length;\n    }\n\n    scrollToFirst(options: ?boolean | {\n        behavior?: ('auto' | 'instant' | 'smooth'),\n        block?: ('start' | 'center' | 'end' | 'nearest'),\n        inline?: ('start' | 'center' | 'end' | 'nearest'),\n    } = null) {\n        options = isNil(options) ? { behavior: 'smooth', inline: 'center' } : options;\n\n        const element = this.elements.find(({ key, el }) => {\n            let rx: RegExp;\n            if (key instanceof RegExp) {\n                rx = key;\n            } else {\n                let expression = escapeRegExp(key);\n                rx = new RegExp(expression.replace('*', '.*'));\n            }\n\n            if (Object.keys(this.errors).some(key => rx.test(key))) {\n                return true;\n            }\n        });\n\n        if (element) {\n            element.el.scrollIntoView(options);\n        }\n    }\n}\n\nexport default Errors;\n","// @flow\nimport { extractFiles } from 'extract-files';\nimport type { ErrorValues } from './Errors';\nimport Errors from './Errors';\nimport type { Method } from './flow';\nimport http from './http';\nimport { arrayToObject, clone, containsFile, emptyValue, hasOwn, isArr, isFile, isNil, isObj, isStr, isFunc } from './utils';\n\ntype PrimitiveFormValue = string | number | boolean | null | typeof undefined;\n\ntype ScalarFormValue = PrimitiveFormValue | Blob | File;\n\ntype FormValue = ScalarFormValue | Array<?FormValue> | { [string]: ?FormValue };\n\nexport type Data = { [string]: FormValue };\n\ntype DataCb = () => Data;\n\ntype Options = {\n    method: Method,\n    baseUrl: string,\n    url: string,\n    graphql: string,\n    sendWith: (method: Method, url: string, data: FormData | Data, options: Options) => Promise<any>,\n    useJson: boolean,\n    strictMode: boolean,\n    isValidationError: ({ status: number }) => boolean,\n    formatData: (Data) => Data,\n    formatErrorResponse: (any) => ErrorValues,\n    timeout: false | number,\n    autoRemoveError: boolean,\n    clear: boolean,\n    quiet: boolean,\n    clone: boolean,\n}\n\ntype PartialOptions = $Shape<Options>;\n\nfunction set(obj: FormValue, keys: number|string|string[], value: FormValue) {\n    if (isStr(keys) || (typeof keys === 'number')) {\n        keys = (''+keys).split('.');\n    }\n\n    let key = keys.shift();\n\n    if (!isObj(obj) || isFile(obj)) {\n        return;\n    }\n\n    if (!keys.length) {\n        if (isArr(obj)) {\n            obj[+key] = value;\n        } else {\n            obj[key] = value;\n        }\n    } else {\n        if (!hasOwn(obj, key)) {\n            if (isArr(obj)) {\n                obj[+key] = key === '0' ? [] : {};\n            } else {\n                obj[key] = key === '0' ? [] : {};\n            }\n        }\n        if (isArr(obj)) {\n            set(obj[+key], keys, value);\n        } else {\n            set(obj[key], keys, value);\n        }\n    }\n}\n\nfunction get(obj: FormValue, keys: string|string[]): FormValue {\n    if (isStr(keys)) {\n        keys = keys.split('.');\n    }\n\n    let key = keys.shift();\n\n    if (!isObj(obj) || isFile(obj) || !hasOwn(obj, key)) {\n        return undefined;\n    }\n\n    let result: FormValue;\n\n    if (isArr(obj)) {\n        result = obj[+key];\n    } else if (isObj(obj) && !isFile(obj)) {\n        result = obj[key];\n    } else {\n        result = undefined;\n    }\n\n    if (!keys.length) {\n        return result;\n    }\n    get(result, keys);\n}\n\nfunction parseOptions(method: ?(Method | PartialOptions), url: ?(string | PartialOptions), options: ?PartialOptions): PartialOptions {\n    method = method ? (isObj(method) ? method : { method }) : {};\n    url = url ? (isObj(url) ? url : { url }) : {};\n    options = options || {};\n\n    return {\n        ...options,\n        ...url,\n        ...method,\n    }\n}\n\nfunction flattenToQueryParams(data: Data | Array<FormValue>, prefix: string = ''): { [string]: string | Blob | File } {\n    let params = {};\n\n    if (isArr(data)) {\n        data.forEach(item => {\n            let paramKey = `${prefix}[]`;\n\n            if (isObj(item) && !isFile(item)) {\n                params = {\n                    ...params,\n                    ...flattenToQueryParams(item, paramKey)\n                };\n                return;\n            }\n\n            params[paramKey] = isFile(item) ? item : formValueToString(item);\n        })\n    } else {\n        Object.keys(data).forEach(key => {\n            let item = data[key];\n\n            let paramKey = prefix ? `${prefix}[${key}]` : '' + key;\n\n            if (isObj(item) && !isFile(item)) {\n                params = {\n                    ...params,\n                    ...flattenToQueryParams(item, paramKey)\n                };\n                return;\n            }\n\n            params[paramKey] = isFile(item) ? item : formValueToString(item);\n        });\n    }\n\n    return params;\n}\n\nfunction formValueToString(value: PrimitiveFormValue): string {\n    if (typeof value === 'boolean') {\n        return ''+(+value);\n    }\n    if (typeof value === 'number') {\n        return value.toString();\n    }\n    return value || '';\n}\n\nfunction bubbleError(error: Error | Object): Promise<Object> {\n    if (error instanceof Error) {\n        throw error;\n    }\n    return Promise.reject(error);\n}\n\nfunction isValidErrorObject(errors) {\n    return !errors ||\n        typeof errors !== 'object' ||\n        !Object.keys(errors).length ||\n        Object.values(errors).some(error => {\n            if (isArr(error)) {\n                return error.some(message => !isStr(message));\n            }\n            return !isStr(error);\n        });\n}\n\nclass Form {\n\n    _errors: Errors;\n\n    _data: Data;\n    _dataCb: ?DataCb;\n    _originalData: Data;\n    _originalConstantData: Data;\n    _options: Options;\n\n    static defaultOptions: Options = {\n        // The default method type used by the submit method\n        method: 'post',\n\n        // If set any relative urls will be appended to the baseUrl\n        baseUrl: '',\n\n        // The url to submit the form\n        url: '',\n\n        // The endpoint to use for all graphql queries\n        graphql: 'graphql',\n\n        // A callback to implement custom HTTP logic.\n        // It is recommended to use this option so the form can utilise your HTTP library.\n        // The callback should return a promise that the form can use to handle the response.\n        sendWith: http,\n\n        // Set to true if you want the form to submit the data as a json object.\n        // This will pass the data as a JavaScript object to the sendWith callback so it is up to you to stringify it for your HTTP library.\n        // If the data contains a File or Blob object the data will be a FormData object regardless of this option (unless strictMode is true).\n        useJson: false,\n\n        // If set to true the form will use follow the `useJson` option even if the data contains non JSONable values (including files).\n        strictMode: false,\n\n        // The status code for which the form should handle validation errors.\n        isValidationError: ({ status }) => status === 422,\n\n        // A callback to format the data before sending it.\n        formatData: (data) => data,\n\n        // A callback that should turn the error response into an object of field names and their validation errors.\n        formatErrorResponse: (response) => {\n            let data = response.data || response.response;\n            if (typeof data === 'string') {\n                try {\n                    data = JSON.parse(data);\n                } catch (e) {\n                    throw new Error('Unable to find errors in the response');\n                }\n            }\n            let errors: ErrorValues = data.errors;\n            if (isValidErrorObject(errors)) {\n                throw new Error('Unable to find errors in the response');\n            }\n            return errors;\n        },\n\n        // The number of milliseconds to wait before clearing the error messages.\n        // When timeout is false the error messages will stay indefinitely.\n        timeout: false,\n\n        // When set to true the errors for a field will be cleared when that field's value is updated.\n        autoRemoveError: true,\n\n        // When set to true, the data will be reverted to it's original values after a successful request.\n        clear: true,\n\n        // When set to true, no errors will be recorded.\n        quiet: false,\n\n        // If clone is set to false any nested objects and arrays will be stored in the form by reference.\n        clone: true,\n    };\n\n    static setOptions = function (options: Options) {\n        Form.defaultOptions = {\n            ...Form.defaultOptions,\n            ...options\n        };\n    };\n\n    constructor(data: Data|DataCb, options: ?Options) {\n        this.setOptions(options);\n\n        if (isFunc(data)) {\n            this._dataCb = data;\n            data = data();\n        }\n\n        this._originalData = {};\n        this._originalConstantData = {};\n        this._data = {};\n\n        // $FlowFixMe\n        this.append(data);\n\n        this._errors = new Errors();\n    }\n\n    setOptions(options: ?Options) {\n        this._options = this._options || Form.defaultOptions;\n        if (options) {\n            this._options = {\n                ...this._options,\n                ...options,\n            }\n        }\n    }\n\n    append(key: string | Data, value: FormValue, constant: ?boolean = false): Form {\n        if (isObj(key)) {\n            Object.keys(key).forEach(field => {\n                this.append(field, key[field], constant);\n            });\n            return this;\n        }\n\n        value = this.parseData(value);\n        if (constant) {\n            set(this._originalConstantData, key, value);\n        } else {\n            set(this._originalData, key, this.parseData(value));\n        }\n        if (!constant) {\n            set(this._data, key, value);\n            this.defineProperty(key);\n        } else {\n            Object.defineProperty(\n                this,\n                key,\n                {\n                    get: () => undefined,\n                    set: () => {\n                        throw new Error(`The \"${key}\" value has been set as constant and cannot be modified`);\n                    }\n                }\n            );\n        }\n\n        return this;\n    }\n\n    defineProperty(key: string) {\n        Object.defineProperty(\n            this,\n            key,\n            {\n                get: () => get(this._data, key),\n                set: (newValue: FormValue) => {\n                    this.setData(key, newValue);\n                }\n            }\n        );\n    }\n\n    constantData(key: string | Data, value: FormValue): Form {\n        return this.append(key, value, true);\n    }\n\n    getData(): Data {\n        return {\n            ...this._data,\n            ...this._originalConstantData,\n        }\n    }\n\n    setData(key: string, value: FormValue) {\n        set(this._data, key, value);\n        if (this._options.autoRemoveError) {\n            this._errors.clear(key);\n        }\n    }\n\n    errors(): Errors {\n        return this._errors;\n    }\n\n    reset(): Form {\n        const originalData = this._dataCb ? this._dataCb() : this._originalData;\n        for (let field in this._data) {\n            set(this, field, this.parseData(get(originalData, field)));\n        }\n\n        this._errors.clear();\n\n        return this;\n    }\n\n    clear(field: string): Form {\n        if (hasOwn(this, field)) {\n            set(this._data, field, emptyValue(get(this._data, field)));\n        }\n        return this;\n    }\n\n    parseData(data: FormValue): FormValue {\n        return this._options.clone ? clone(data) : data;\n    }\n\n    addFileFromEvent(event: Event | DragEvent, key: ?string): Form {\n        let node = event.target;\n        if (!(node instanceof HTMLInputElement)) {\n            throw new Error('Incompatible event target, must be of type HTMLInputElement');\n        }\n        if (!key) {\n            key = node.name;\n        }\n        if (key in this && (node.value !== '')) {\n            if (event instanceof DragEvent) {\n                this.setData(key, event.dataTransfer && event.dataTransfer.files.length && event.dataTransfer.files[0]);\n            } else {\n                this.setData(key, node.files && node.files.length && node.files[0]);\n            }\n            node.value = '';\n        }\n        return this;\n    }\n\n    post(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('post', url, options);\n    }\n\n    put(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('put', url, options);\n    }\n\n    patch(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('patch', url, options);\n    }\n\n    delete(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('delete', url, options);\n    }\n\n    get(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('get', url, options);\n    }\n\n    graphql(query: string, options: ?Options): Promise<any> {\n        options = options || {};\n        const originalFormatDataCallback = options.formatData || this._options.formatData;\n\n        options.url = options.graphql || this._options.graphql;\n\n        options.useJson = !this.hasFile();\n\n        options.formatData = (data) => {\n            data = originalFormatDataCallback ? originalFormatDataCallback(data) : data;\n            const operations = {\n                query,\n                variables: data,\n            };\n\n            if (!this.hasFile()) {\n                return operations;\n            }\n            const { clone, files } = extractFiles(data);\n            operations.variables = clone;\n            return {\n                operations: JSON.stringify(operations),\n                map: JSON.stringify(arrayToObject(Array.from(files.values()))),\n                ...arrayToObject(Array.from(files.keys())),\n            };\n        };\n        return this.post(options);\n    }\n\n    submit(method: Method | Options, url: ?string | Options, options: ?Options): Promise<any> {\n        options = parseOptions(method, url, options);\n        const requestOptions = {\n            ...this._options,\n            ...options,\n        };\n\n        let formData, data = requestOptions.formatData(this.getData());\n        if (this.shouldConvertToFormData(requestOptions)) {\n            formData = new FormData();\n\n            let params = flattenToQueryParams(data);\n\n            Object.keys(params).forEach(key => {\n                formData.append(key, params[key]);\n            });\n\n            data = formData;\n        }\n\n        let httpAdapter = requestOptions.sendWith;\n\n        return httpAdapter(requestOptions.method, this.buildBaseUrl(requestOptions), data, requestOptions).then(response => {\n            if (requestOptions.isValidationError(response)) {\n                this.onFail(response, requestOptions);\n            } else {\n                this.onSuccess(requestOptions);\n            }\n            return response;\n        }).catch(error => {\n            if (requestOptions.isValidationError(error)) {\n                this.onFail(error, requestOptions);\n            }\n            return bubbleError(error);\n        });\n    }\n\n    shouldConvertToFormData(options: ?Options) {\n        options = options || this._options;\n        if (options.strictMode) {\n            return !options.useJson;\n        }\n        return !options.useJson || this.hasFile();\n    }\n\n    hasFile(): boolean {\n        return containsFile(this.getData());\n    }\n\n    onSuccess(options: ?Options) {\n        options = options || this._options;\n        if (options.clear) {\n            this.reset();\n        }\n    }\n\n    onFail(error: XMLHttpRequest, options: ?Options) {\n        options = options || this._options;\n        if (!options.quiet) {\n            let errors = options.formatErrorResponse(error);\n            this._errors.record(errors, options.timeout);\n            if (this._errors.hasElements()) {\n                this._errors.scrollToFirst();\n            }\n        }\n    }\n\n    buildBaseUrl(options: ?Options) {\n        options = options || this._options;\n        if (options.url.includes('://')) {\n            return options.url;\n        }\n        let baseUrl = options.baseUrl;\n        let relativeUrl = options.url;\n\n        baseUrl = baseUrl.replace(/\\/+$/g, '');\n        relativeUrl = relativeUrl.replace(/^\\/+/g, '');\n\n        return `${baseUrl}/${relativeUrl}`;\n    }\n\n    makeUrl(options: ?Options): string {\n        let url = this.buildBaseUrl(options);\n        let queryStart = url.includes('?') ? '&' : '?';\n        let fullUrl = url + queryStart;\n        let properties = [];\n        let data = this.getData();\n\n        let params = flattenToQueryParams(data);\n\n        Object.keys(params).forEach(key => {\n            let item = params[key];\n\n            if (isFile(item)) {\n                throw new Error('Cannot convert file to a string');\n            }\n\n            properties.push(key + (isNil(item) ? '' : `=${item}`));\n        });\n        return fullUrl + properties.join('&');\n    }\n\n    addElement(key: string, el: HTMLElement) {\n        this._errors.addElement(key, el);\n    }\n\n    removeElement(el: HTMLElement) {\n        this._errors.removeElement(el);\n    }\n\n    removeElementKey(key: string) {\n        this._errors.removeElementKey(key);\n    }\n}\n\n\nexport default Form;\n","// @flow\nimport type { Method } from './flow';\nimport type { Data } from \"./Form\";\n\ntype Options = {\n    method: Method,\n    url: string,\n}\n\nexport default function http(method: Method, url: string, data: FormData | Data, options: Options) {\n    let xhr = new XMLHttpRequest();\n\n    let response = new Promise<XMLHttpRequest>((resolve, reject) => {\n        xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                resolve(xhr);\n            } else {\n                reject(xhr);\n            }\n        };\n        xhr.onerror = () => reject(xhr);\n    });\n\n    xhr.open(method, url);\n    if (data instanceof FormData) {\n        xhr.setRequestHeader('Content-Type', 'multipart/form-data');\n        xhr.send(data);\n    } else {\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify(data));\n    }\n\n    return response;\n}"],"names":["root","factory","exports","module","define","amd","self","__esModule","ReactNativeFile","_ref","uri","name","type","this","extractFiles","value","path","clone","files","Map","addFile","paths","file","storedPaths","get","push","apply","set","File","Blob","_ReactNativeFile","prefix","FileList","Array","prototype","map","call","i","isArray","child","result","forEach","constructor","Object","_extractFiles","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","obj","prop","hasOwnProperty","r","Symbol","toStringTag","hasOwn","isFile","val","isArr","includes","isObj","target","keys","isNil","isStr","containsFile","length","arrayToObject","array","item","index","errors","elements","has","field","RegExp","some","test","any","getFirst","error","add","force","record","timeout","window","setTimeout","clear","addElement","el","removeElement","element","filter","removeElementKey","hasElements","scrollToFirst","options","behavior","inline","find","rx","expression","replace","scrollIntoView","split","shift","flattenToQueryParams","data","params","paramKey","formValueToString","toString","Form","setOptions","Function","_dataCb","_originalData","_originalConstantData","_data","append","_errors","Errors","_options","defaultOptions","constant","parseData","Error","newValue","setData","constantData","getData","autoRemoveError","reset","originalData","original","addFileFromEvent","event","node","HTMLInputElement","DragEvent","dataTransfer","post","url","submit","put","patch","delete","graphql","query","originalFormatDataCallback","formatData","useJson","hasFile","operations","variables","JSON","stringify","from","values","method","parseOptions","requestOptions","formData","shouldConvertToFormData","FormData","httpAdapter","sendWith","buildBaseUrl","then","response","isValidationError","onFail","onSuccess","catch","Promise","reject","bubbleError","strictMode","quiet","formatErrorResponse","baseUrl","relativeUrl","makeUrl","queryStart","fullUrl","properties","join","xhr","XMLHttpRequest","resolve","onload","status","onerror","open","setRequestHeader","send","parse","e","message","isValidErrorObject"],"sourceRoot":""}