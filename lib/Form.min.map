{"version":3,"sources":["webpack://formla/webpack/universalModuleDefinition","webpack://formla/webpack/bootstrap","webpack://formla/./node_modules/extract-files/lib/ReactNativeFile.mjs","webpack://formla/./src/utils.js","webpack://formla/./src/Errors.js","webpack://formla/./src/Form.js","webpack://formla/./node_modules/extract-files/lib/extractFiles.mjs","webpack://formla/./src/http.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","m","ReactNativeFile","_ref","uri","name","type","this","hasOwnProperty","Object","prototype","isFile","val","Blob","clone","obj","JSON","parse","stringify","isObj","value","isArr","Array","isNil","isStr","arrayToObject","array","target","forEach","item","index","Errors","errors","elements","field","RegExp","keys","some","key","test","length","error","get","force","has","timeout","setTimeout","clear","el","addElement","push","element","filter","removeElementKey","options","behavior","inline","find","rx","expression","string","replace","escapeRegExp","scrollIntoView","flattenToQueryParams","data","prefix","params","paramKey","formValueToString","toString","Form","setOptions","originalData","originalConstantData","append","defaultOptions","constant","parseData","defineProperty","set","Error","newValue","setData","autoRemoveError","call","hasOwn","original","emptyValue","event","node","HTMLInputElement","DragEvent","dataTransfer","files","url","submit","query","originalFormatDataCallback","formatData","graphql","useJson","hasFile","operations","variables","extractFiles","path","Map","addFile","paths","file","storedPaths","apply","File","FileList","map","i","isArray","child","result","constructor","from","values","post","method","parseOptions","formData","requestOptions","getData","shouldConvertToFormData","FormData","httpAdapter","sendWith","buildBaseUrl","then","response","isValidationError","onFail","onSuccess","catch","Promise","reject","bubbleError","strictMode","containsFile","reset","quiet","formatErrorResponse","record","hasElements","scrollToFirst","includes","baseUrl","relativeUrl","queryStart","fullUrl","properties","join","removeElement","xhr","XMLHttpRequest","resolve","onload","status","onerror","open","setRequestHeader","send","e","message","isValidErrorObject","c","d","getter","o","enumerable","r","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","n","object","property","p","s","moduleId","l","modules"],"mappings":"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","file":"Form.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"formla\"] = factory();\n\telse\n\t\troot[\"formla\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export var ReactNativeFile = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type\n  this.uri = uri\n  this.name = name\n  this.type = type\n}\n","// @flow\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function hasOwn (obj: Object, key: string): boolean %checks {\n    return hasOwnProperty.call(obj, key)\n}\n\nexport function isFile(val: mixed): boolean %checks {\n    return !!val && (val instanceof Blob);\n}\n\nexport function clone(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport function emptyValue(original: mixed): Array<any> | {} | '' | null {\n    if (original instanceof Array) {\n        return [];\n    }\n    if (typeof original === 'object') {\n        return {};\n    }\n    if (typeof original === 'string') {\n        return '';\n    }\n    return null;\n}\n\nexport function isObj(value: mixed): boolean %checks {\n    return value !== null && typeof value === 'object';\n}\n\nexport function isArr(value: mixed): %checks {\n    return value instanceof Array;\n}\n\nexport function isNil(value: mixed): %checks {\n    return value == null;\n}\n\nexport function isFunc(value: mixed): %checks {\n    return value instanceof Function;\n}\n\nexport function isStr(value: mixed): %checks {\n    return typeof value === 'string';\n}\n\nexport function escapeRegExp(string: string) {\n    return string.replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&');\n}\n\nexport function containsFile(obj: any): boolean {\n    if (isArr(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            if (obj[i] instanceof File) {\n                return true;\n            }\n            if (isObj(obj[i])) {\n                return containsFile(obj[i]);\n            }\n        }\n    } else {\n        for (let key in obj) {\n            if (obj[key] instanceof File) {\n                return true;\n            }\n            if (isObj(obj[key])) {\n                return containsFile(obj[key]);\n            }\n        }\n    }\n    return false;\n}\n\nexport function arrayToObject(array: any[]): { [string]: any } {\n    let target = {};\n\n    array.forEach((item, index) => {\n        target[index] = item;\n    });\n\n    return target;\n}\n","// @flow\nimport {escapeRegExp, isArr, isNil} from \"./utils\";\n\ntype ErrorValue = string | Array<string>;\nexport type ErrorValues = { [string]: ErrorValue };\n\nclass Errors {\n\n    errors: ErrorValues;\n    elements: Array<{ key: string | RegExp, el: Element }>;\n\n    /**\n     * Create a new Errors instance.\n     */\n    constructor() {\n        this.errors = {};\n        this.elements = [];\n    }\n\n    /**\n     * Determine if an errors exists for the given field.\n     *\n     * @param {string|RegExp} field\n     */\n    has(field: string | RegExp): boolean {\n        if (field instanceof RegExp) {\n            return Object.keys(this.errors).some(key => field.test(key));\n        }\n        return this.errors.hasOwnProperty(field);\n    }\n\n    /**\n     * Determine if we have any errors.\n     */\n    any(): boolean {\n        return Object.keys(this.errors).length > 0;\n    }\n\n    /**\n     * Retrieve the error message for a field.\n     *\n     * @param {string} field\n     */\n    getFirst(field: string): ?string {\n        let error = this.get(field);\n        if (error) {\n            if (isArr(error)) {\n                return error.length ? error[0] : null;\n            } else {\n                return error || null;\n            }\n        }\n    }\n\n    get(field: string) {\n        return this.errors[field];\n    }\n\n    /**\n     * Add a new error message if one doesn't already exist.\n     *\n     * @param {string} field\n     * @param error\n     * @param force\n     */\n    add(field: string, error: ErrorValue, force: boolean = false) {\n        if (!this.has(field) || force) {\n            this.errors[field] = error;\n        }\n    }\n\n    /**\n     * Record the new errors.\n     *\n     * @param {object} errors\n     * @param timeout\n     */\n    record(errors: ErrorValues, timeout: ?(false | number) = 3000) {\n        this.errors = errors;\n        if (timeout) {\n            window.setTimeout(() => {\n                this.clear();\n            }, timeout);\n        }\n    }\n\n    /**\n     * Clear one or all error fields.\n     *\n     * @param {string|null} field\n     */\n    clear(field: ?string) {\n        if (field) {\n            delete this.errors[field];\n\n            return;\n        }\n\n        this.errors = {};\n    }\n\n    addElement(key: string | RegExp | string[], el: Element) {\n        if (isArr(key)) {\n            key.forEach(field => this.addElement(field, el));\n        } else {\n            this.elements.push({ key, el });\n        }\n    }\n\n    removeElement(element: Element) {\n        this.elements = this.elements.filter(({ el }) => el !== element);\n    }\n\n    removeElementKey(field: string | RegExp | string[]) {\n        if (isArr(field)) {\n            field.forEach(key => this.removeElementKey(key));\n        } else {\n            this.elements = this.elements.filter(({ key }) => key !== field);\n        }\n    }\n\n    hasElements(): boolean {\n        return !!this.elements.length;\n    }\n\n    scrollToFirst(options: ?boolean | {\n        behavior?: ('auto' | 'instant' | 'smooth'),\n        block?: ('start' | 'center' | 'end' | 'nearest'),\n        inline?: ('start' | 'center' | 'end' | 'nearest'),\n    } = null) {\n        options = isNil(options) ? { behavior: 'smooth', inline: 'center' } : options;\n\n        const element = this.elements.find(({ key, el }) => {\n            let rx: RegExp;\n            if (key instanceof RegExp) {\n                rx = key;\n            } else {\n                let expression = escapeRegExp(key);\n                rx = new RegExp(expression.replace('*', '.*'));\n            }\n\n            if (Object.keys(this.errors).some(key => rx.test(key))) {\n                return true;\n            }\n        });\n\n        if (element) {\n            element.el.scrollIntoView(options);\n        }\n    }\n}\n\nexport default Errors;\n","// @flow\nimport { extractFiles } from 'extract-files';\nimport type { ErrorValues } from './Errors';\nimport Errors from './Errors';\nimport type { Method } from './flow';\nimport http from './http';\nimport { arrayToObject, clone, containsFile, emptyValue, hasOwn, isArr, isFile, isNil, isObj, isStr } from './utils';\n\ntype PrimitiveFormValue = string | number | boolean | null | typeof undefined;\n\ntype ScalarFormValue = PrimitiveFormValue | Blob | File;\n\ntype FormValue = ScalarFormValue | Array<?FormValue> | { [string]: ?FormValue };\n\nexport type Data = { [string]: FormValue };\n\ntype Options = {\n    method: Method,\n    baseUrl: string,\n    url: string,\n    graphql: string,\n    sendWith: (method: Method, url: string, data: FormData | Data, options: Options) => Promise<any>,\n    useJson: boolean,\n    strictMode: boolean,\n    isValidationError: ({ status: number }) => boolean,\n    formatData: (Data) => Data,\n    formatErrorResponse: (any) => ErrorValues,\n    timeout: false | number,\n    autoRemoveError: boolean,\n    clear: boolean,\n    quiet: boolean,\n    clone: boolean,\n}\n\ntype PartialOptions = $Shape<Options>;\n\nfunction parseOptions(method: ?(Method | PartialOptions), url: ?(string | PartialOptions), options: ?PartialOptions): PartialOptions {\n    method = method ? (isObj(method) ? method : { method }) : {};\n    url = url ? (isObj(url) ? url : { url }) : {};\n    options = options || {};\n\n    return {\n        ...options,\n        ...url,\n        ...method,\n    }\n}\n\nfunction flattenToQueryParams(data: Data | Array<FormValue>, prefix: string = ''): { [string]: string | Blob | File } {\n    let params = {};\n\n    if (isArr(data)) {\n        data.forEach(item => {\n            let paramKey = `${prefix}[]`;\n\n            if (isObj(item) && !isFile(item)) {\n                params = {\n                    ...params,\n                    ...flattenToQueryParams(item, paramKey)\n                };\n                return;\n            }\n\n            params[paramKey] = isFile(item) ? item : formValueToString(item);\n        })\n    } else {\n        Object.keys(data).forEach(key => {\n            let item = data[key];\n\n            let paramKey = prefix ? `${prefix}[${key}]` : '' + key;\n\n            if (isObj(item) && !isFile(item)) {\n                params = {\n                    ...params,\n                    ...flattenToQueryParams(item, paramKey)\n                };\n                return;\n            }\n\n            params[paramKey] = isFile(item) ? item : formValueToString(item);\n        });\n    }\n\n    return params;\n}\n\nfunction formValueToString(value: PrimitiveFormValue): string {\n    if (typeof value === 'boolean') {\n        return ''+(+value);\n    }\n    if (typeof value === 'number') {\n        return value.toString();\n    }\n    return value || '';\n}\n\nfunction bubbleError(error: Error | Object): Promise<Object> {\n    if (error instanceof Error) {\n        throw error;\n    }\n    return Promise.reject(error);\n}\n\nfunction isValidErrorObject(errors) {\n    return !errors ||\n        typeof errors !== 'object' ||\n        !Object.keys(errors).length ||\n        Object.values(errors).some(error => {\n            if (isArr(error)) {\n                return error.some(message => !isStr(message));\n            }\n            return !isStr(error);\n        });\n}\n\nclass Form {\n\n    errors: Errors;\n\n    data: Data;\n    originalData: Data;\n    originalConstantData: Data;\n    options: Options;\n\n    static defaultOptions: Options = {\n        // The default method type used by the submit method\n        method: 'post',\n\n        // If set any relative urls will be appended to the baseUrl\n        baseUrl: '',\n\n        // The url to submit the form\n        url: '',\n\n        // The endpoint to use for all graphql queries\n        graphql: 'graphql',\n\n        // A callback to implement custom HTTP logic.\n        // It is recommended to use this option so the form can utilise your HTTP library.\n        // The callback should return a promise that the form can use to handle the response.\n        sendWith: http,\n\n        // Set to true if you want the form to submit the data as a json object.\n        // This will pass the data as a JavaScript object to the sendWith callback so it is up to you to stringify it for your HTTP library.\n        // If the data contains a File or Blob object the data will be a FormData object regardless of this option (unless strictMode is true).\n        useJson: false,\n\n        // If set to true the form will throw an Error if the data has a File or Blob object and the useJson option is true.\n        strictMode: false,\n\n        // The status code for which the form should handle validation errors.\n        isValidationError: ({ status }) => status === 422,\n\n        // A callback to format the data before sending it.\n        formatData: (data) => data,\n\n        // A callback that should turn the error response into an object of field names and their validation errors.\n        formatErrorResponse: (response) => {\n            let data = response.data || response.response;\n            if (typeof data === 'string') {\n                try {\n                    data = JSON.parse(data);\n                } catch (e) {\n                    throw new Error('Unable to find errors in the response');\n                }\n            }\n            let errors: ErrorValues = data.errors;\n            if (isValidErrorObject(errors)) {\n                throw new Error('Unable to find errors in the response');\n            }\n            return errors;\n        },\n\n        // The number of milliseconds to wait before clearing the error messages.\n        // When timeout is false the error messages will stay indefinitely.\n        timeout: false,\n\n        // When set to true the errors for a field will be cleared when that field's value is updated.\n        autoRemoveError: true,\n\n        // When set to true, the data will be reverted to it's original values after a successful request.\n        clear: true,\n\n        // When set to true, no errors will be recorded.\n        quiet: false,\n\n        // If clone is set to false any nested objects and arrays will be stored in the form by reference.\n        clone: true,\n    };\n\n    static setOptions = function (options: Options) {\n        Form.defaultOptions = {\n            ...Form.defaultOptions,\n            ...options\n        };\n    };\n\n    constructor(data: Data, options: ?Options) {\n        this.setOptions(options);\n\n        this.originalData = {};\n        this.originalConstantData = {};\n        this.data = {};\n\n        this.append(data);\n\n        this.errors = new Errors();\n    }\n\n    setOptions(options: ?Options) {\n        this.options = this.options || Form.defaultOptions;\n        if (options) {\n            this.options = {\n                ...this.options,\n                ...options,\n            }\n        }\n    }\n\n    append(key: string | Data, value: FormValue, constant: ?boolean = false): Form {\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(field => {\n                this.append(field, key[field], constant);\n            });\n            return this;\n        }\n\n        value = this.parseData(value);\n        if (constant) {\n            this.originalConstantData[key] = value;\n        } else {\n            this.originalData[key] = isFile(value) ? value : clone(value);\n        }\n        if (!constant) {\n            this.data[key] = value;\n            this.defineProperty(key);\n        } else {\n            Object.defineProperty(\n                this,\n                key,\n                {\n                    get: () => undefined,\n                    set: () => {\n                        throw new Error(`The \"${key}\" value has been set as constant and cannot be modified`);\n                    }\n                }\n            );\n        }\n\n        return this;\n    }\n\n    defineProperty(key: string) {\n        Object.defineProperty(\n            this,\n            key,\n            {\n                get: () => this.data[key],\n                set: (newValue: FormValue) => {\n                    this.setData(key, newValue);\n                }\n            }\n        );\n    }\n\n    constantData(key: string | Data, value: FormValue): Form {\n        return this.append(key, value, true);\n    }\n\n    getData(): Data {\n        return {\n            ...this.data,\n            ...this.originalConstantData,\n        }\n    }\n\n    setData(key: string, value: FormValue) {\n        this.data[key] = value;\n        if (this.options.autoRemoveError) {\n            this.errors.clear(key);\n        }\n    }\n\n    reset(): Form {\n        for (let field in this.data) {\n            this.data[field] = this.originalData[field];\n        }\n\n        this.errors.clear();\n\n        return this;\n    }\n\n    clear(field: string): Form {\n        if (hasOwn(this, field)) {\n            this.data[field] = emptyValue(this.data[field]);\n        }\n        return this;\n    }\n\n    parseData(data: FormValue): FormValue {\n        return this.options.clone && !isFile(data) ? clone(data) : data;\n    }\n\n    addFileFromEvent(event: Event | DragEvent, key: ?string): Form {\n        let node = event.target;\n        if (!(node instanceof HTMLInputElement)) {\n            throw new Error('Incompatible event target, must be of type HTMLInputElement');\n        }\n        if (!key) {\n            key = node.name;\n        }\n        if (key in this && (node.value !== '')) {\n            if (event instanceof DragEvent) {\n                this.setData(key, event.dataTransfer && event.dataTransfer.files.length && event.dataTransfer.files[0]);\n            } else {\n                this.setData(key, node.files && node.files.length && node.files[0]);\n            }\n            node.value = '';\n        }\n        return this;\n    }\n\n    post(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('post', url, options);\n    }\n\n    put(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('put', url, options);\n    }\n\n    patch(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('patch', url, options);\n    }\n\n    delete(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('delete', url, options);\n    }\n\n    get(url: string | Options, options: ?Options): Promise<any> {\n        return this.submit('get', url, options);\n    }\n\n    graphql(query: string, options: ?Options): Promise<any> {\n        options = options || {};\n        const originalFormatDataCallback = options.formatData || this.options.formatData;\n\n        options.url = options.graphql || this.options.graphql;\n\n        options.useJson = !this.hasFile();\n\n        options.formatData = (data) => {\n            data = originalFormatDataCallback ? originalFormatDataCallback(data) : data;\n            const operations = {\n                query,\n                variables: data,\n            };\n\n            if (!this.hasFile()) {\n                return operations;\n            }\n            const { clone, files } = extractFiles(data);\n            operations.variables = clone;\n            return {\n                operations: JSON.stringify(operations),\n                map: JSON.stringify(arrayToObject(Array.from(files.values()))),\n                ...arrayToObject(Array.from(files.keys())),\n            };\n        };\n        return this.post(options);\n    }\n\n    submit(method: Method | Options, url: ?string | Options, options: ?Options): Promise<any> {\n        options = parseOptions(method, url, options);\n        const requestOptions = {\n            ...this.options,\n            ...options,\n        };\n\n        let formData, data = requestOptions.formatData(this.getData());\n        if (this.shouldConvertToFormData(requestOptions)) {\n            formData = new FormData();\n\n            let params = flattenToQueryParams(data);\n\n            Object.keys(params).forEach(key => {\n                formData.append(key, params[key]);\n            });\n\n            data = formData;\n        }\n\n        let httpAdapter = requestOptions.sendWith;\n\n        return httpAdapter(requestOptions.method, this.buildBaseUrl(requestOptions), data, requestOptions).then(response => {\n            if (requestOptions.isValidationError(response)) {\n                this.onFail(response, requestOptions);\n            } else {\n                this.onSuccess(requestOptions);\n            }\n            return response;\n        }).catch(error => {\n            if (requestOptions.isValidationError(error)) {\n                this.onFail(error, requestOptions);\n            }\n            return bubbleError(error);\n        });\n    }\n\n    shouldConvertToFormData(options: ?Options) {\n        options = options || this.options;\n        if (!options.useJson) {\n            return true;\n        }\n        if (this.hasFile() && options.strictMode) {\n            throw new Error('Cannot convert a file to JSON');\n        }\n        return this.hasFile();\n    }\n\n    hasFile(): boolean {\n        return containsFile(this.getData());\n    }\n\n    onSuccess(options: ?Options) {\n        options = options || this.options;\n        if (options.clear) {\n            this.reset();\n        }\n    }\n\n    onFail(error: XMLHttpRequest, options: ?Options) {\n        options = options || this.options;\n        if (!options.quiet) {\n            let errors = options.formatErrorResponse(error);\n            this.errors.record(errors, options.timeout);\n            if (this.errors.hasElements()) {\n                this.errors.scrollToFirst();\n            }\n        }\n    }\n\n    buildBaseUrl(options: ?Options) {\n        options = options || this.options;\n        if (options.url.includes('://')) {\n            return options.url;\n        }\n        let baseUrl = options.baseUrl;\n        let relativeUrl = options.url;\n\n        baseUrl = baseUrl.replace(/\\/+$/g, '');\n        relativeUrl = relativeUrl.replace(/^\\/+/g, '');\n\n        return `${baseUrl}/${relativeUrl}`;\n    }\n\n    makeUrl(options: ?Options): string {\n        let url = this.buildBaseUrl(options);\n        let queryStart = url.includes('?') ? '&' : '?';\n        let fullUrl = url + queryStart;\n        let properties = [];\n        let data = this.getData();\n\n        let params = flattenToQueryParams(data);\n\n        Object.keys(params).forEach(key => {\n            let item = params[key];\n\n            if (isFile(item)) {\n                throw new Error('Cannot convert file to a string');\n            }\n\n            properties.push(key + (isNil(item) ? '' : `=${item}`));\n        });\n        return fullUrl + properties.join('&');\n    }\n\n    addElement(key: string, el: HTMLElement) {\n        this.errors.addElement(key, el);\n    }\n\n    removeElement(el: HTMLElement) {\n        this.errors.removeElement(el);\n    }\n\n    removeElementKey(key: string) {\n        this.errors.removeElementKey(key);\n    }\n}\n\n\nexport default Form;\n","import { ReactNativeFile } from './ReactNativeFile'\nexport function extractFiles(value, path) {\n  if (path === void 0) {\n    path = ''\n  }\n\n  var clone\n  var files = new Map()\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file)\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths)\n    else files.set(file, paths)\n  }\n\n  if (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  ) {\n    clone = null\n    addFile([path], value)\n  } else {\n    var prefix = path ? path + '.' : ''\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function(file, i) {\n        addFile(['' + prefix + i], file)\n        return null\n      })\n    else if (Array.isArray(value))\n      clone = value.map(function(child, i) {\n        var result = extractFiles(child, '' + prefix + i)\n        result.files.forEach(addFile)\n        return result.clone\n      })\n    else if (value && value.constructor === Object) {\n      clone = {}\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i)\n        result.files.forEach(addFile)\n        clone[i] = result.clone\n      }\n    } else clone = value\n  }\n\n  return {\n    clone: clone,\n    files: files\n  }\n}\n","// @flow\nimport type { Method } from './flow';\nimport type { Data } from \"./Form\";\n\ntype Options = {\n    method: Method,\n    url: string,\n}\n\nexport default function http(method: Method, url: string, data: FormData | Data, options: Options) {\n    let xhr = new XMLHttpRequest();\n\n    let response = new Promise<XMLHttpRequest>((resolve, reject) => {\n        xhr.onload = () => {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                resolve(xhr);\n            } else {\n                reject(xhr);\n            }\n        };\n        xhr.onerror = () => reject(xhr);\n    });\n\n    xhr.open(method, url);\n    if (data instanceof FormData) {\n        xhr.setRequestHeader('Content-Type', 'multipart/form-data');\n        xhr.send(data);\n    } else {\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify(data));\n    }\n\n    return response;\n}"],"sourceRoot":""}